#! /usr/bin/env python
"""
Snakefile â€” Bactopia wrapper for pangenome analysis (standard, snippy
"""

from __future__ import print_function
import os
import sys


## read project-specific configuration options
REF = "/hpc/group/taylorlab/users/nfb/projects/P-REALM/ref/CF_000013465.1_ASM1346v1_genomic.gbff"
DB = "/hpc/group/taylorlab/users/nfb/projects/P-REALM/baktadb/db.tar.xz"
QCDIR = "/hpc/group/taylorlab/users/nfb/projects/P-REALM/prealm_ret/summary/"
OUTDIR = "/hpc/group/taylorlab/users/nfb/projects/P-REALM/bactopia_work"

## targets
rule all:
	input: "bashreport.txt"
    # input:
    #     [
    #         "ismapper.2out.txt",
    #         "mobsuite.2out.txt",
    #         "rgi.2out.txt",
    #         "plasmidfinder.2out.txt",
    #         "staphtyper.2out.txt",
    #         "staphopiasccmec.2out.txt",
    #         "snippy.2out.txt",
    #         "mashtree.2out.txt",
    #         "pangenome_panaroo.2out.txt",
    #         "pangenome_pirate.2out.txt"
    #     ]


##########################################
#######    Genome Tools          #########
##########################################
rule run_ISmapper_module:
	input: dir = OUTDIR + "prealm_ret", ref = REF
	output: "ismapper.2out.txt"
	shell:
		r"""
		bactopia \
		--wf ismapper \
    	--bactopia {input.dir} \
    	--exclude QCDIR + bactopia-exclude.txt \
		--reference {input.ref} \
		2> {output}
		"""

rule run_mobsuite_tool:
	input: OUTDIR + "prealm_ret"
	output: "mobsuite.2out.txt"
	shell:
		r"""
		bactopia \
		--wf mobsuite \
    	--bactopia {input} \
    	--exclude QCDIR + bactopia-exclude.txt \
		2> {output}
		"""

rule run_rgi_tool:
	input: OUTDIR + "prealm_ret"
	output: "rgi.2out.txt"
	shell:
		r"""
		bactopia \
		--wf rgi \
    	--bactopia {input} \
    	--exclude QCDIR + bactopia-exclude.txt \
		2> {output}
		"""
rule run_plasmidfinder_tool:
	input: OUTDIR + "prealm_ret"
	output: "plasmidfinder.2out.txt"
	shell:
		r"""
		bactopia \
		--wf plasmidfinder \
    	--bactopia {input} \
    	--exclude QCDIR + bactopia-exclude.txt \
		2> {output}
		"""

##########################################
#######    Staph Tools           #########
##########################################

rule run_staphtyper_tool:
	input: OUTDIR + "prealm_ret"
	output: "staphtyper.2out.txt"
	shell:
		r"""
		bactopia \
		--wf staphtyper \
    	--bactopia {input} \
    	--exclude QCDIR + bactopia-exclude.txt \
		2> {output}
		"""
rule run_sstaphopiasccmec_tool:
	input: OUTDIR + "prealm_ret"
	output: "staphopiasccmec.2out.txt"
	shell:
		r"""
		bactopia \
		--wf staphopiasccmec \
    	--bactopia {input} \
    	--exclude QCDIR + bactopia-exclude.txt \
		2> {output}
		"""

##########################################
#######          Modules         #########
##########################################
rule run_snippy_module:
	input: dir = OUTDIR + "prealm_ret", ref = REF
	output: "snippy.2out.txt"
	shell:
		r"""
		bactopia \
		--wf snippy \
    	--bactopia {input.dir} \
    	--exclude QCDIR + bactopia-exclude.txt \
		--reference {input.ref} \
		2> {output}
		"""


rule run_mashtree:
	input: OUTDIR + "prealm_ret"
	output: "mashtree.2out.txt"
	shell:
		r"""
		bactopia \
		--wf mashtree \
    	--bactopia {input} \
    	--exclude QCDIR + bactopia-exclude.txt \
		--use_panaroo \
		2> {output}
		"""


rule run_pangenome_panaroo_module:
	input: OUTDIR + "prealm_ret"
	output: "pangenome_panaroo.2out.txt"
	shell:
		r"""
		bactopia \
		--wf pangenome \
    	--bactopia {input} \
    	--exclude QCDIR + bactopia-exclude.txt \
		--use_pirate \
		2> {output}
		"""
rule run_pangenome_pirate_module:
	input: OUTDIR + "prealm_ret"
	output: "pangenome_pirate.2out.txt"
	shell:
		r"""
		bactopia \
		--wf pangenome \
    	--bactopia {input} \
    	--exclude QCDIR + bactopia-exclude.txt \
		--use_pirate \
		2> {output}
		"""

##########################################
#######          Main            #########
##########################################
rule summarize_ret:
	input: OUTDIR + "prealm_ret"
	output: "bashreport.txt"
	shell:
		r"""
		bactopia summary \
    	--bactopia-path {input} \
		2> {output}
		"""

# bactopia runs tools sequentially within its own run_pipeline, details below for flags I have incorporated:
# gather: increased coverage from default 100 to 300
# QC: adding fastqc and fastp (this is default)
#    adding scrubbr to remove human genome data
# Assembler: using Shovill-PE with default SKESA. Enable adapter trimming
# Annotator: using Bakta intead of Prokka default
# Sketcher: using default (really a sanity check)
# Sequence Typing: MSLT module, default
# Antimicrobial Resistance: AMR module, default
# Merlin: uses sketches to run species-specific tools; letting it detect SA
rule run_bactopia_main:
	input: smpl = OUTDIR + "samples.fofn.txt", db = DB
	output: OUTDIR + "prealm_ret"
	shell:
		r"""
		bactopia \
    	--samples {input.smpl} \
    	--coverage 300 \
		--shovill_assembler skesa \
		--trim \
		--use_bakta \
		--bakta_db {input.db} \
    	--outdir {output}
		"""

rule prepare_samples:
	input: FASTQ
	output: OUTDIR + "samples.fofn.txt"
	shell:
		r"""
		bactopia prepare \
	    --path {input} \
	    --species "Staphylococcus aureus" \
	    --genome-size 2800000 \
	    > {output}
		"""
